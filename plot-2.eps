%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot-2.eps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Thu Mar 26 08:10:59 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 230
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 266 50 lineto 266 230 lineto 50 230 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot-2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 26 08:10:59 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4320.00 3600.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
648 448 M
63 0 V
3564 0 R
-63 0 V
stroke
564 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
648 950 M
63 0 V
3564 0 R
-63 0 V
stroke
564 950 M
[ [(Helvetica) 140.0 0.0 true true 0 (200)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 1452 M
63 0 V
3564 0 R
-63 0 V
stroke
564 1452 M
[ [(Helvetica) 140.0 0.0 true true 0 (400)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 1953 M
63 0 V
3564 0 R
-63 0 V
stroke
564 1953 M
[ [(Helvetica) 140.0 0.0 true true 0 (600)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 2455 M
63 0 V
3564 0 R
-63 0 V
stroke
564 2455 M
[ [(Helvetica) 140.0 0.0 true true 0 (800)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 2957 M
63 0 V
3564 0 R
-63 0 V
stroke
564 2957 M
[ [(Helvetica) 140.0 0.0 true true 0 (1000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 3459 M
63 0 V
3564 0 R
-63 0 V
stroke
564 3459 M
[ [(Helvetica) 140.0 0.0 true true 0 (1200)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 448 M
0 63 V
0 2948 R
0 -63 V
stroke
648 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-35)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1152 448 M
0 63 V
0 2948 R
0 -63 V
stroke
1152 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-30)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1656 448 M
0 63 V
0 2948 R
0 -63 V
stroke
1656 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-25)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2159 448 M
0 63 V
0 2948 R
0 -63 V
stroke
2159 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2663 448 M
0 63 V
0 2948 R
0 -63 V
stroke
2663 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-15)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3167 448 M
0 63 V
0 2948 R
0 -63 V
stroke
3167 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3671 448 M
0 63 V
0 2948 R
0 -63 V
stroke
3671 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4174 448 M
0 63 V
0 2948 R
0 -63 V
stroke
4174 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
648 3459 N
648 448 L
3627 0 V
0 3011 V
-3627 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
88 1953 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (currently sick \(ppm\))]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
2461 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Days ago)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
1320 3326 M
[ [(Helvetica) 140.0 0.0 true true 0 (germany)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
0.00 0.00 1.00 C
1404 3326 M
399 0 V
648 448 M
101 0 V
101 0 V
100 0 V
101 0 V
101 0 V
101 0 V
100 1 V
101 0 V
101 0 V
101 1 V
100 2 V
101 1 V
101 1 V
101 2 V
100 7 V
101 5 V
101 4 V
101 7 V
100 4 V
101 9 V
101 14 V
101 5 V
100 48 V
101 27 V
101 37 V
101 44 V
100 60 V
101 93 V
101 90 V
101 136 V
100 71 V
101 80 V
101 126 V
101 117 V
100 130 V
648 448 CircleF
749 448 CircleF
850 448 CircleF
950 448 CircleF
1051 448 CircleF
1152 448 CircleF
1253 448 CircleF
1353 449 CircleF
1454 449 CircleF
1555 449 CircleF
1656 450 CircleF
1756 452 CircleF
1857 453 CircleF
1958 454 CircleF
2059 456 CircleF
2159 463 CircleF
2260 468 CircleF
2361 472 CircleF
2462 479 CircleF
2562 483 CircleF
2663 492 CircleF
2764 506 CircleF
2865 511 CircleF
2965 559 CircleF
3066 586 CircleF
3167 623 CircleF
3268 667 CircleF
3368 727 CircleF
3469 820 CircleF
3570 910 CircleF
3671 1046 CircleF
3771 1117 CircleF
3872 1197 CircleF
3973 1323 CircleF
4074 1440 CircleF
4174 1570 CircleF
1603 3326 CircleF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LTb
LT1
1.00 0.00 0.00 C
LCb setrgbcolor
1320 3186 M
[ [(Helvetica) 140.0 0.0 true true 0 (italy)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
LT1
1.00 0.00 0.00 C
1404 3186 M
399 0 V
648 448 M
101 0 V
101 1 V
100 1 V
101 4 V
101 3 V
101 4 V
100 5 V
101 9 V
101 9 V
101 10 V
100 23 V
101 14 V
101 18 V
101 24 V
100 30 V
101 31 V
101 50 V
101 57 V
100 71 V
101 34 V
101 89 V
101 0 V
100 199 V
101 138 V
101 135 V
101 121 V
100 133 V
101 156 V
101 205 V
101 224 V
100 241 V
101 205 V
101 175 V
101 189 V
100 189 V
648 448 BoxF
749 448 BoxF
850 449 BoxF
950 450 BoxF
1051 454 BoxF
1152 457 BoxF
1253 461 BoxF
1353 466 BoxF
1454 475 BoxF
1555 484 BoxF
1656 494 BoxF
1756 517 BoxF
1857 531 BoxF
1958 549 BoxF
2059 573 BoxF
2159 603 BoxF
2260 634 BoxF
2361 684 BoxF
2462 741 BoxF
2562 812 BoxF
2663 846 BoxF
2764 935 BoxF
2865 935 BoxF
2965 1134 BoxF
3066 1272 BoxF
3167 1407 BoxF
3268 1528 BoxF
3368 1661 BoxF
3469 1817 BoxF
3570 2022 BoxF
3671 2246 BoxF
3771 2487 BoxF
3872 2692 BoxF
3973 2867 BoxF
4074 3056 BoxF
4174 3245 BoxF
1603 3186 BoxF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LTb
LT3
0.00 0.67 0.00 C
LCb setrgbcolor
1320 3046 M
[ [(Helvetica) 140.0 0.0 true true 0 (korea)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
LT3
0.00 0.67 0.00 C
1404 3046 M
399 0 V
648 449 M
101 2 V
101 4 V
100 7 V
101 5 V
101 8 V
101 4 V
100 10 V
101 16 V
101 19 V
101 26 V
100 19 V
101 19 V
101 28 V
101 14 V
100 15 V
101 16 V
101 15 V
101 9 V
100 5 V
101 1 V
101 8 V
101 3 V
100 4 V
101 3 V
101 3 V
101 2 V
100 2 V
101 3 V
101 5 V
101 3 V
100 4 V
101 5 V
101 0 V
101 3 V
100 3 V
648 449 DiaF
749 451 DiaF
850 455 DiaF
950 462 DiaF
1051 467 DiaF
1152 475 DiaF
1253 479 DiaF
1353 489 DiaF
1454 505 DiaF
1555 524 DiaF
1656 550 DiaF
1756 569 DiaF
1857 588 DiaF
1958 616 DiaF
2059 630 DiaF
2159 645 DiaF
2260 661 DiaF
2361 676 DiaF
2462 685 DiaF
2562 690 DiaF
2663 691 DiaF
2764 699 DiaF
2865 702 DiaF
2965 706 DiaF
3066 709 DiaF
3167 712 DiaF
3268 714 DiaF
3368 716 DiaF
3469 719 DiaF
3570 724 DiaF
3671 727 DiaF
3771 731 DiaF
3872 736 DiaF
3973 736 DiaF
4074 739 DiaF
4174 742 DiaF
1603 3046 DiaF
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LTb
1.00 0.75 0.00 C
LCb setrgbcolor
1320 2906 M
[ [(Helvetica) 140.0 0.0 true true 0 (spain)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
1.00 0.75 0.00 C
1404 2906 M
399 0 V
648 448 M
101 0 V
101 0 V
100 0 V
101 0 V
101 0 V
101 0 V
100 1 V
101 0 V
101 1 V
101 0 V
100 2 V
101 2 V
101 3 V
101 3 V
100 2 V
101 7 V
101 5 V
101 9 V
100 21 V
101 33 V
101 30 V
101 0 V
100 153 V
101 59 V
101 70 V
101 111 V
100 87 V
101 110 V
101 206 V
101 119 V
100 247 V
101 160 V
101 311 V
101 227 V
100 470 V
648 448 TriUF
749 448 TriUF
850 448 TriUF
950 448 TriUF
1051 448 TriUF
1152 448 TriUF
1253 448 TriUF
1353 449 TriUF
1454 449 TriUF
1555 450 TriUF
1656 450 TriUF
1756 452 TriUF
1857 454 TriUF
1958 457 TriUF
2059 460 TriUF
2159 462 TriUF
2260 469 TriUF
2361 474 TriUF
2462 483 TriUF
2562 504 TriUF
2663 537 TriUF
2764 567 TriUF
2865 567 TriUF
2965 720 TriUF
3066 779 TriUF
3167 849 TriUF
3268 960 TriUF
3368 1047 TriUF
3469 1157 TriUF
3570 1363 TriUF
3671 1482 TriUF
3771 1729 TriUF
3872 1889 TriUF
3973 2200 TriUF
4074 2427 TriUF
4174 2897 TriUF
1603 2906 TriUF
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LTb
0.75 0.50 1.00 C
LCb setrgbcolor
1320 2766 M
[ [(Helvetica) 140.0 0.0 true true 0 (uk)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
0.75 0.50 1.00 C
1404 2766 M
399 0 V
648 448 M
101 0 V
101 0 V
100 0 V
101 0 V
101 0 V
101 0 V
100 0 V
101 1 V
101 0 V
101 0 V
100 0 V
101 0 V
101 1 V
101 1 V
100 1 V
101 2 V
101 2 V
101 2 V
100 2 V
101 2 V
101 3 V
101 0 V
100 13 V
101 12 V
101 0 V
101 14 V
100 15 V
101 25 V
101 0 V
101 47 V
100 36 V
101 23 V
101 34 V
101 51 V
100 52 V
648 448 Star
749 448 Star
850 448 Star
950 448 Star
1051 448 Star
1152 448 Star
1253 448 Star
1353 448 Star
1454 449 Star
1555 449 Star
1656 449 Star
1756 449 Star
1857 449 Star
1958 450 Star
2059 451 Star
2159 452 Star
2260 454 Star
2361 456 Star
2462 458 Star
2562 460 Star
2663 462 Star
2764 465 Star
2865 465 Star
2965 478 Star
3066 490 Star
3167 490 Star
3268 504 Star
3368 519 Star
3469 544 Star
3570 544 Star
3671 591 Star
3771 627 Star
3872 650 Star
3973 684 Star
4074 735 Star
4174 787 Star
1603 2766 Star
% End plot #5
% Begin plot #6
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
1320 2626 M
[ [(Helvetica) 140.0 0.0 true true 0 (us)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C
1404 2626 M
399 0 V
648 448 M
101 0 V
101 0 V
100 0 V
101 0 V
101 0 V
101 0 V
100 0 V
101 0 V
101 0 V
101 0 V
100 1 V
101 0 V
101 0 V
101 0 V
100 1 V
101 0 V
101 1 V
101 1 V
100 0 V
101 3 V
101 2 V
101 3 V
100 4 V
101 4 V
101 6 V
101 9 V
100 13 V
101 11 V
101 44 V
101 41 V
100 49 V
101 58 V
101 80 V
101 75 V
100 90 V
648 448 Circle
749 448 Circle
850 448 Circle
950 448 Circle
1051 448 Circle
1152 448 Circle
1253 448 Circle
1353 448 Circle
1454 448 Circle
1555 448 Circle
1656 448 Circle
1756 449 Circle
1857 449 Circle
1958 449 Circle
2059 449 Circle
2159 450 Circle
2260 450 Circle
2361 451 Circle
2462 452 Circle
2562 452 Circle
2663 455 Circle
2764 457 Circle
2865 460 Circle
2965 464 Circle
3066 468 Circle
3167 474 Circle
3268 483 Circle
3368 496 Circle
3469 507 Circle
3570 551 Circle
3671 592 Circle
3771 641 Circle
3872 699 Circle
3973 779 Circle
4074 854 Circle
4174 944 Circle
1603 2626 Circle
% End plot #6
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
648 3459 N
648 448 L
3627 0 V
0 3011 V
-3627 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
