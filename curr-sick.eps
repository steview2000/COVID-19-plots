%!PS-Adobe-2.0 EPSF-2.0
%%Title: curr-sick.eps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Wed Apr  1 22:09:11 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 230
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 266 50 lineto 266 230 lineto 50 230 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (curr-sick.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr  1 22:09:11 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4320.00 3600.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
648 448 M
63 0 V
3564 0 R
-63 0 V
stroke
564 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
648 878 M
63 0 V
3564 0 R
-63 0 V
stroke
564 878 M
[ [(Helvetica) 140.0 0.0 true true 0 (200)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 1308 M
63 0 V
3564 0 R
-63 0 V
stroke
564 1308 M
[ [(Helvetica) 140.0 0.0 true true 0 (400)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 1738 M
63 0 V
3564 0 R
-63 0 V
stroke
564 1738 M
[ [(Helvetica) 140.0 0.0 true true 0 (600)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 2169 M
63 0 V
3564 0 R
-63 0 V
stroke
564 2169 M
[ [(Helvetica) 140.0 0.0 true true 0 (800)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 2599 M
63 0 V
3564 0 R
-63 0 V
stroke
564 2599 M
[ [(Helvetica) 140.0 0.0 true true 0 (1000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 3029 M
63 0 V
3564 0 R
-63 0 V
stroke
564 3029 M
[ [(Helvetica) 140.0 0.0 true true 0 (1200)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 3459 M
63 0 V
3564 0 R
-63 0 V
stroke
564 3459 M
[ [(Helvetica) 140.0 0.0 true true 0 (1400)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
648 448 M
0 63 V
0 2948 R
0 -63 V
stroke
648 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-40)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1080 448 M
0 63 V
0 2948 R
0 -63 V
stroke
1080 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-35)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1512 448 M
0 63 V
0 2948 R
0 -63 V
stroke
1512 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-30)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1943 448 M
0 63 V
0 2948 R
0 -63 V
stroke
1943 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-25)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2375 448 M
0 63 V
0 2948 R
0 -63 V
stroke
2375 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2807 448 M
0 63 V
0 2948 R
0 -63 V
stroke
2807 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-15)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3239 448 M
0 63 V
0 2948 R
0 -63 V
stroke
3239 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3671 448 M
0 63 V
0 2948 R
0 -63 V
stroke
3671 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4102 448 M
0 63 V
0 2948 R
0 -63 V
stroke
4102 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
648 3459 N
648 448 L
3627 0 V
0 3011 V
-3627 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
88 1953 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (currently sick \(ppm\))]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
2461 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Days ago)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
1404 3326 M
[ [(Helvetica) 140.0 0.0 true true 0 (germany)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
0.00 0.00 1.00 C
1488 3326 M
399 0 V
648 448 M
86 0 V
87 0 V
86 0 V
86 0 V
87 0 V
86 1 V
87 0 V
86 0 V
86 1 V
87 1 V
86 1 V
86 1 V
87 2 V
86 5 V
86 5 V
87 4 V
86 6 V
86 3 V
87 8 V
86 11 V
87 5 V
86 41 V
86 24 V
87 31 V
86 38 V
86 51 V
87 80 V
86 77 V
86 117 V
87 60 V
86 69 V
86 108 V
87 101 V
86 111 V
87 170 V
86 177 V
86 175 V
87 111 V
86 121 V
86 124 V
648 448 CircleF
734 448 CircleF
821 448 CircleF
907 448 CircleF
993 448 CircleF
1080 448 CircleF
1166 449 CircleF
1253 449 CircleF
1339 449 CircleF
1425 450 CircleF
1512 451 CircleF
1598 452 CircleF
1684 453 CircleF
1771 455 CircleF
1857 460 CircleF
1943 465 CircleF
2030 469 CircleF
2116 475 CircleF
2202 478 CircleF
2289 486 CircleF
2375 497 CircleF
2462 502 CircleF
2548 543 CircleF
2634 567 CircleF
2721 598 CircleF
2807 636 CircleF
2893 687 CircleF
2980 767 CircleF
3066 844 CircleF
3152 961 CircleF
3239 1021 CircleF
3325 1090 CircleF
3411 1198 CircleF
3498 1299 CircleF
3584 1410 CircleF
3671 1580 CircleF
3757 1757 CircleF
3843 1932 CircleF
3930 2043 CircleF
4016 2164 CircleF
4102 2288 CircleF
1687 3326 CircleF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LTb
LT1
1.00 0.00 0.00 C
LCb setrgbcolor
1404 3186 M
[ [(Helvetica) 140.0 0.0 true true 0 (italy)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
LT1
1.00 0.00 0.00 C
1488 3186 M
399 0 V
648 448 M
86 1 V
87 1 V
86 3 V
86 3 V
87 3 V
86 5 V
87 5 V
86 8 V
86 9 V
87 19 V
86 9 V
86 15 V
87 16 V
86 21 V
86 22 V
87 41 V
86 48 V
86 57 V
87 29 V
86 65 V
87 0 V
86 156 V
86 100 V
87 103 V
86 88 V
86 107 V
87 95 V
86 161 V
86 192 V
87 148 V
86 142 V
86 150 V
87 115 V
86 125 V
87 161 V
86 158 V
86 130 V
87 137 V
86 59 V
86 76 V
648 448 BoxF
734 449 BoxF
821 450 BoxF
907 453 BoxF
993 456 BoxF
1080 459 BoxF
1166 464 BoxF
1253 469 BoxF
1339 477 BoxF
1425 486 BoxF
1512 505 BoxF
1598 514 BoxF
1684 529 BoxF
1771 545 BoxF
1857 566 BoxF
1943 588 BoxF
2030 629 BoxF
2116 677 BoxF
2202 734 BoxF
2289 763 BoxF
2375 828 BoxF
2462 828 BoxF
2548 984 BoxF
2634 1084 BoxF
2721 1187 BoxF
2807 1275 BoxF
2893 1382 BoxF
2980 1477 BoxF
3066 1638 BoxF
3152 1830 BoxF
3239 1978 BoxF
3325 2120 BoxF
3411 2270 BoxF
3498 2385 BoxF
3584 2510 BoxF
3671 2671 BoxF
3757 2829 BoxF
3843 2959 BoxF
3930 3096 BoxF
4016 3155 BoxF
4102 3231 BoxF
1687 3186 BoxF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LTb
LT3
0.00 0.67 0.00 C
LCb setrgbcolor
1404 3046 M
[ [(Helvetica) 140.0 0.0 true true 0 (malaysia)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
LT3
0.00 0.67 0.00 C
1488 3046 M
399 0 V
648 448 M
86 0 V
87 0 V
86 0 V
86 0 V
87 0 V
86 0 V
87 0 V
86 0 V
86 0 V
87 1 V
86 0 V
86 0 V
87 1 V
86 0 V
86 2 V
87 1 V
86 0 V
86 1 V
87 1 V
86 1 V
87 0 V
86 3 V
86 2 V
87 12 V
86 9 V
86 7 V
87 6 V
86 7 V
86 7 V
87 8 V
86 6 V
86 14 V
87 4 V
86 10 V
87 14 V
86 5 V
86 7 V
87 4 V
86 4 V
86 5 V
648 448 DiaF
734 448 DiaF
821 448 DiaF
907 448 DiaF
993 448 DiaF
1080 448 DiaF
1166 448 DiaF
1253 448 DiaF
1339 448 DiaF
1425 448 DiaF
1512 449 DiaF
1598 449 DiaF
1684 449 DiaF
1771 450 DiaF
1857 450 DiaF
1943 452 DiaF
2030 453 DiaF
2116 453 DiaF
2202 454 DiaF
2289 455 DiaF
2375 456 DiaF
2462 456 DiaF
2548 459 DiaF
2634 461 DiaF
2721 473 DiaF
2807 482 DiaF
2893 489 DiaF
2980 495 DiaF
3066 502 DiaF
3152 509 DiaF
3239 517 DiaF
3325 523 DiaF
3411 537 DiaF
3498 541 DiaF
3584 551 DiaF
3671 565 DiaF
3757 570 DiaF
3843 577 DiaF
3930 581 DiaF
4016 585 DiaF
4102 590 DiaF
1687 3046 DiaF
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LTb
1.00 0.75 0.00 C
LCb setrgbcolor
1404 2906 M
[ [(Helvetica) 140.0 0.0 true true 0 (france)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
1.00 0.75 0.00 C
1488 2906 M
399 0 V
648 448 M
86 0 V
87 0 V
86 0 V
86 0 V
87 0 V
86 0 V
87 1 V
86 0 V
86 2 V
87 1 V
86 2 V
86 0 V
87 3 V
86 3 V
86 8 V
87 10 V
86 5 V
86 3 V
87 18 V
86 15 V
87 0 V
86 44 V
86 25 V
87 1 V
86 67 V
86 32 V
87 45 V
86 56 V
86 49 V
87 50 V
86 -18 V
86 117 V
87 38 V
86 65 V
87 81 V
86 88 V
86 138 V
87 26 V
86 104 V
86 178 V
648 448 TriUF
734 448 TriUF
821 448 TriUF
907 448 TriUF
993 448 TriUF
1080 448 TriUF
1166 448 TriUF
1253 449 TriUF
1339 449 TriUF
1425 451 TriUF
1512 452 TriUF
1598 454 TriUF
1684 454 TriUF
1771 457 TriUF
1857 460 TriUF
1943 468 TriUF
2030 478 TriUF
2116 483 TriUF
2202 486 TriUF
2289 504 TriUF
2375 519 TriUF
2462 519 TriUF
2548 563 TriUF
2634 588 TriUF
2721 589 TriUF
2807 656 TriUF
2893 688 TriUF
2980 733 TriUF
3066 789 TriUF
3152 838 TriUF
3239 888 TriUF
3325 870 TriUF
3411 987 TriUF
3498 1025 TriUF
3584 1090 TriUF
3671 1171 TriUF
3757 1259 TriUF
3843 1397 TriUF
3930 1423 TriUF
4016 1527 TriUF
4102 1705 TriUF
1687 2906 TriUF
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LTb
0.75 0.50 1.00 C
LCb setrgbcolor
1404 2766 M
[ [(Helvetica) 140.0 0.0 true true 0 (sweden)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
0.75 0.50 1.00 C
1488 2766 M
399 0 V
648 448 M
86 0 V
87 0 V
86 0 V
86 0 V
87 0 V
86 0 V
87 1 V
86 0 V
86 2 V
87 0 V
86 0 V
86 1 V
87 4 V
86 12 V
86 2 V
87 13 V
86 9 V
86 9 V
87 23 V
86 31 V
87 21 V
86 47 V
86 31 V
87 13 V
86 17 V
86 18 V
87 19 V
86 31 V
86 42 V
87 25 V
86 37 V
86 23 V
87 49 V
86 46 V
87 65 V
86 43 V
86 81 V
87 54 V
86 62 V
86 81 V
648 448 Star
734 448 Star
821 448 Star
907 448 Star
993 448 Star
1080 448 Star
1166 448 Star
1253 449 Star
1339 449 Star
1425 451 Star
1512 451 Star
1598 451 Star
1684 452 Star
1771 456 Star
1857 468 Star
1943 470 Star
2030 483 Star
2116 492 Star
2202 501 Star
2289 524 Star
2375 555 Star
2462 576 Star
2548 623 Star
2634 654 Star
2721 667 Star
2807 684 Star
2893 702 Star
2980 721 Star
3066 752 Star
3152 794 Star
3239 819 Star
3325 856 Star
3411 879 Star
3498 928 Star
3584 974 Star
3671 1039 Star
3757 1082 Star
3843 1163 Star
3930 1217 Star
4016 1279 Star
4102 1360 Star
1687 2766 Star
% End plot #5
% Begin plot #6
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
1404 2626 M
[ [(Helvetica) 140.0 0.0 true true 0 (us)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
2.000 UL
LTb
0.00 0.00 0.00 C
1488 2626 M
399 0 V
648 448 M
86 0 V
87 0 V
86 0 V
86 0 V
87 0 V
86 0 V
87 0 V
86 0 V
86 0 V
87 0 V
86 1 V
86 0 V
87 0 V
86 0 V
86 1 V
87 1 V
86 0 V
86 1 V
87 2 V
86 2 V
87 3 V
86 3 V
86 4 V
87 5 V
86 7 V
86 11 V
87 9 V
86 38 V
86 36 V
87 41 V
86 50 V
86 69 V
87 64 V
86 77 V
87 117 V
86 114 V
86 127 V
87 124 V
86 134 V
86 167 V
648 448 Circle
734 448 Circle
821 448 Circle
907 448 Circle
993 448 Circle
1080 448 Circle
1166 448 Circle
1253 448 Circle
1339 448 Circle
1425 448 Circle
1512 448 Circle
1598 449 Circle
1684 449 Circle
1771 449 Circle
1857 449 Circle
1943 450 Circle
2030 451 Circle
2116 451 Circle
2202 452 Circle
2289 454 Circle
2375 456 Circle
2462 459 Circle
2548 462 Circle
2634 466 Circle
2721 471 Circle
2807 478 Circle
2893 489 Circle
2980 498 Circle
3066 536 Circle
3152 572 Circle
3239 613 Circle
3325 663 Circle
3411 732 Circle
3498 796 Circle
3584 873 Circle
3671 990 Circle
3757 1104 Circle
3843 1231 Circle
3930 1355 Circle
4016 1489 Circle
4102 1656 Circle
1687 2626 Circle
% End plot #6
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
648 3459 N
648 448 L
3627 0 V
0 3011 V
-3627 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
